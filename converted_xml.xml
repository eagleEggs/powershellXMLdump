<?xml version="1.0" encoding="utf-8"?>
<helpItems schema="maml">
<details><name>Add-Computer</name>
<verb>Add</verb>
<noun>Computer</noun>
<description><para>Add the local computer to a domain or workgroup.
</para>
</description>
</details>
<description><para>The Add-Computer cmdlet adds the local computer or remote computers to a domain or workgroup, or moves them from one domain to another. It also creates a domain account if the computer is added to the domain without an account.
</para>
<para>You can use the parameters of this cmdlet to specify an organizational unit (OU) and domain controller or to perform an unsecure join.
</para>
<para>To get the results of the command, use the Verbose and PassThru parameters.
</para>
</description>
<syntax><syntaxItem><name>Add-Computer</name>
<parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="DN, Domain"><name>DomainName</name>
<Description><para>Specifies the domain to which the computers are added. This parameter is required when adding the computers to a domain.
</para>
</Description>
<parameterValue required="true" variableLength="false">String</parameterValue>
<type><name>String</name>
<uri /></type>
<defaultValue>None</defaultValue>
</parameter>
<parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="named" aliases="none"><name>ComputerName</name>
<Description><para>Specifies the computers to add to a domain or workgroup. The default is the local computer.
</para>
<para>Type the NetBIOS name, an Internet Protocol (IP) address, or a fully qualified domain name of each of the remote computers. To specify the local computer, type the computer name, a dot (.), or "localhost".
</para>
<para>This parameter does not rely on Windows PowerShell remoting. You can use the ComputerName parameter of Add-Computer even if your computer is not configured to run remote commands.
</para>
<para>This parameter was introduced in Windows PowerShell 3.0.
</para>
</Description>
<parameterValue required="true" variableLength="false">String[]</parameterValue>
<type><name>String[]</name>
<uri /></type>
<defaultValue>None</defaultValue>
</parameter>
<parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf"><name>Confirm</name>
<Description><para>Prompts you for confirmation before running the cmdlet.
</para>
</Description>
<type><name>SwitchParameter</name>
<uri /></type>
<defaultValue>False</defaultValue>
</parameter>
<parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="DomainCredential"><name>Credential</name>
<Description><para>Specifies a user account that has permission to join the computers to a new domain. The default is the current user.
</para>
<para>Type a user name, such as "User01" or "Domain01\User01", or enter a PSCredential object, such as one generated by the Get-Credential cmdlet. If you type a user name, you will be prompted for a password.
</para>
<para>To specify a user account that has permission to remove the computer from its current domain, use the UnjoinDomainCredential parameter. To specify a user account that has permission to connect to a remote computer, use the LocalCredential parameter.
</para>
</Description>
<parameterValue required="true" variableLength="false">PSCredential</parameterValue>
<type><name>PSCredential</name>
<uri /></type>
<defaultValue>None</defaultValue>
</parameter>
<parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><name>Force</name>
<Description><para>Forces the command to run without asking for user confirmation. Without this parameter, Add-Computer requires you to confirm the addition of each computer.
</para>
<para>This parameter was introduced in Windows PowerShell 3.0.
</para>
</Description>
<type><name>SwitchParameter</name>
<uri /></type>
<defaultValue>False</defaultValue>
</parameter>
<parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><name>LocalCredential</name>
<Description><para>Specifies a user account that has permission to connect to the computers that are specified by the ComputerName parameter. The default is the current user.
</para>
<para>Type a user name, such as "User01" or "Domain01\User01", or enter a PSCredential object, such as one generated by the Get-Credential cmdlet. If you type a user name, you will be prompted for a password.
</para>
<para>To specify a user account that has permission to add the computers to a new domain, use the Credential parameter. To specify a user account that has permission to remove the computers from their current domain, use the UnjoinDomainCredential parameter.
</para>
<para>This parameter was introduced in Windows PowerShell 3.0.
</para>
</Description>
<parameterValue required="true" variableLength="false">PSCredential</parameterValue>
<type><name>PSCredential</name>
<uri /></type>
<defaultValue>None</defaultValue>
</parameter>
<parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none"><name>NewName</name>
<Description><para>Specifies a new name for the computer in the new domain. This parameter is valid only when one computer is being added or moved.
</para>
<para>This parameter was introduced in Windows PowerShell 3.0.
</para>
</Description>
<parameterValue required="true" variableLength="false">String</parameterValue>
<type><name>String</name>
<uri /></type>
<defaultValue>None</defaultValue>
</parameter>
<parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="OU"><name>OUPath</name>
<Description><para>Specifies an organizational unit (OU) for the domain account. Enter the full distinguished name of the OU in quotation marks.  The default value is the default OU for machine objects in the domain.
</para>
</Description>
<parameterValue required="true" variableLength="false">String</parameterValue>
<type><name>String</name>
<uri /></type>
<defaultValue>None</defaultValue>
</parameter>
<parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><name>Options</name>
<Description><para>Specifies advanced options for the Add-Computer join operation. Enter one or more values in a comma-separated string.
</para>
<para>The acceptable values for this parameter are:
</para>
<para>- AccountCreate : Creates a domain account. The Add-Computer cmdlet automatically creates a domain account when it adds a computer to a domain. This option is included for completeness.
</para>
<para>- Win9XUpgrade : Indicates that the join operation is part of a Windows operating system upgrade.
</para>
<para>- UnsecuredJoin : Performs an unsecured join. To request an unsecured join, use the Unsecure parameter or this option.
</para>
<para>- PasswordPass : Sets the machine password to the value of the Credential (DomainCredential) parameter after performing an unsecured join. This option also indicates that the value of the Credential (DomainCredential) parameter is a machine password, not a user password. This option is valid only when the UnsecuredJoin option is specified.
</para>
<para> -- JoinWithNewName : Renames the computer name in the new domain to the name specified by the NewName parameter. When you use the NewName parameter, this option is set automatically. This option is designed to be used with the Rename-Computer cmdlet. If you use the Rename-Computer cmdlet to rename the computer, but do not restart the computer to make the change effective, you can use this parameter to join the computer to a domain with its new name.
</para>
<para>- JoinReadOnly : Uses an existing machine account to join the computer to a read-only domain controller. The machine account must be added to the allowed list for password replication policy and the account password must be replicated to the read-only domain controller prior to the join operation.
</para>
<para>- InstallInvoke : Sets the create (0x2) and delete (0x4) flags of the FJoinOptions parameter of the JoinDomainOrWorkgroup method. For more information about the JoinDomainOrWorkgroup method, see "JoinDomainOrWorkgroup Method of the Win32_ComputerSystem Class" on MSDNhttp://msdn.microsoft.com/library/aa392154(VS.85).aspx at http://msdn.microsoft.com/library/aa392154(VS.85).aspx.
</para>
<para>For more information about these options, see "NetJoinDomain" on MSDNhttp://msdn.microsoft.com/library/aa370433(VS.85).aspx at http://msdn.microsoft.com/library/aa370433(VS.85).aspx.
</para>
<para>This parameter was introduced in Windows PowerShell 3.0.
</para>
</Description>
<parameterValueGroup><parameterValue required="false" variableLength="false">AccountCreate</parameterValue>
<parameterValue required="false" variableLength="false">Win9XUpgrade</parameterValue>
<parameterValue required="false" variableLength="false">UnsecuredJoin</parameterValue>
<parameterValue required="false" variableLength="false">PasswordPass</parameterValue>
<parameterValue required="false" variableLength="false">DeferSPNSet</parameterValue>
<parameterValue required="false" variableLength="false">JoinWithNewName</parameterValue>
<parameterValue required="false" variableLength="false">JoinReadOnly</parameterValue>
<parameterValue required="false" variableLength="false">InstallInvoke</parameterValue>
</parameterValueGroup>
<parameterValue required="true" variableLength="false">JoinOptions</parameterValue>
<type><name>JoinOptions</name>
<uri /></type>
<defaultValue>None</defaultValue>
</parameter>
<parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><name>PassThru</name>
<Description><para>Returns an object representing the item with which you are working. By default, this cmdlet does not generate any output.
</para>
</Description>
<type><name>SwitchParameter</name>
<uri /></type>
<defaultValue>False</defaultValue>
</parameter>
<parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><name>Restart</name>
<Description><para>Indicates that this cmdlet restarts the computers that were added to the domain or workgroup. A restart is often required to make the change effective.
</para>
<para>This parameter was introduced in Windows PowerShell 3.0.
</para>
</Description>
<type><name>SwitchParameter</name>
<uri /></type>
<defaultValue>False</defaultValue>
</parameter>
<parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="DC"><name>Server</name>
<Description><para>Specifies the name of a domain controller that adds the computer to the domain. Enter the name in DomainName\ComputerName format. By default, no domain controller is specified.
</para>
</Description>
<parameterValue required="true" variableLength="false">String</parameterValue>
<type><name>String</name>
<uri /></type>
<defaultValue>None</defaultValue>
</parameter>
<parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><name>UnjoinDomainCredential</name>
<Description><para>Specifies a user account that has permission to remove the computers from their current domains. The default is the current user.
</para>
<para>Type a user name, such as "User01" or "Domain01\User01", or enter a PSCredential object, such as one generated by the Get-Credential cmdlet. If you type a user name, you will be prompted for a password.
</para>
<para>Use this parameter when you are moving computers to a different domain. To specify a user account that has permission to join the new domain, use the Credential parameter. To specify a user account that has permission to connect to a remote computer, use the LocalCredential parameter.
</para>
<para>This parameter was introduced in Windows PowerShell 3.0.
</para>
</Description>
<parameterValue required="true" variableLength="false">PSCredential</parameterValue>
<type><name>PSCredential</name>
<uri /></type>
<defaultValue>None</defaultValue>
</parameter>
<parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><name>Unsecure</name>
<Description><para>Indicates that this cmdlet performs an unsecured join to the specified domain.
</para>
</Description>
<type><name>SwitchParameter</name>
<uri /></type>
<defaultValue>False</defaultValue>
</parameter>
<parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi"><name>WhatIf</name>
<Description><para>Shows what would happen if the cmdlet runs. The cmdlet is not run.
</para>
</Description>
<type><name>SwitchParameter</name>
<uri /></type>
<defaultValue>False</defaultValue>
</parameter>
</syntaxItem>
<syntaxItem><name>Add-Computer</name>
<parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="WGN"><name>WorkgroupName</name>
<Description><para>Specifies the name of a workgroup to which the computers are added. The default value is "WORKGROUP".
</para>
</Description>
<parameterValue required="true" variableLength="false">String</parameterValue>
<type><name>String</name>
<uri /></type>
<defaultValue>None</defaultValue>
</parameter>
<parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="named" aliases="none"><name>ComputerName</name>
<Description><para>Specifies the computers to add to a domain or workgroup. The default is the local computer.
</para>
<para>Type the NetBIOS name, an Internet Protocol (IP) address, or a fully qualified domain name of each of the remote computers. To specify the local computer, type the computer name, a dot (.), or "localhost".
</para>
<para>This parameter does not rely on Windows PowerShell remoting. You can use the ComputerName parameter of Add-Computer even if your computer is not configured to run remote commands.
</para>
<para>This parameter was introduced in Windows PowerShell 3.0.
</para>
</Description>
<parameterValue required="true" variableLength="false">String[]</parameterValue>
<type><name>String[]</name>
<uri /></type>
<defaultValue>None</defaultValue>
</parameter>
<parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf"><name>Confirm</name>
<Description><para>Prompts you for confirmation before running the cmdlet.
</para>
</Description>
<type><name>SwitchParameter</name>
<uri /></type>
<defaultValue>False</defaultValue>
</parameter>
<parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="DomainCredential"><name>Credential</name>
<Description><para>Specifies a user account that has permission to join the computers to a new domain. The default is the current user.
</para>
<para>Type a user name, such as "User01" or "Domain01\User01", or enter a PSCredential object, such as one generated by the Get-Credential cmdlet. If you type a user name, you will be prompted for a password.
</para>
<para>To specify a user account that has permission to remove the computer from its current domain, use the UnjoinDomainCredential parameter. To specify a user account that has permission to connect to a remote computer, use the LocalCredential parameter.
</para>
</Description>
<parameterValue required="true" variableLength="false">PSCredential</parameterValue>
<type><name>PSCredential</name>
<uri /></type>
<defaultValue>None</defaultValue>
</parameter>
<parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><name>Force</name>
<Description><para>Forces the command to run without asking for user confirmation. Without this parameter, Add-Computer requires you to confirm the addition of each computer.
</para>
<para>This parameter was introduced in Windows PowerShell 3.0.
</para>
</Description>
<type><name>SwitchParameter</name>
<uri /></type>
<defaultValue>False</defaultValue>
</parameter>
<parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><name>LocalCredential</name>
<Description><para>Specifies a user account that has permission to connect to the computers that are specified by the ComputerName parameter. The default is the current user.
</para>
<para>Type a user name, such as "User01" or "Domain01\User01", or enter a PSCredential object, such as one generated by the Get-Credential cmdlet. If you type a user name, you will be prompted for a password.
</para>
<para>To specify a user account that has permission to add the computers to a new domain, use the Credential parameter. To specify a user account that has permission to remove the computers from their current domain, use the UnjoinDomainCredential parameter.
</para>
<para>This parameter was introduced in Windows PowerShell 3.0.
</para>
</Description>
<parameterValue required="true" variableLength="false">PSCredential</parameterValue>
<type><name>PSCredential</name>
<uri /></type>
<defaultValue>None</defaultValue>
</parameter>
<parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none"><name>NewName</name>
<Description><para>Specifies a new name for the computer in the new domain. This parameter is valid only when one computer is being added or moved.
</para>
<para>This parameter was introduced in Windows PowerShell 3.0.
</para>
</Description>
<parameterValue required="true" variableLength="false">String</parameterValue>
<type><name>String</name>
<uri /></type>
<defaultValue>None</defaultValue>
</parameter>
<parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><name>PassThru</name>
<Description><para>Returns an object representing the item with which you are working. By default, this cmdlet does not generate any output.
</para>
</Description>
<type><name>SwitchParameter</name>
<uri /></type>
<defaultValue>False</defaultValue>
</parameter>
<parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><name>Restart</name>
<Description><para>Indicates that this cmdlet restarts the computers that were added to the domain or workgroup. A restart is often required to make the change effective.
</para>
<para>This parameter was introduced in Windows PowerShell 3.0.
</para>
</Description>
<type><name>SwitchParameter</name>
<uri /></type>
<defaultValue>False</defaultValue>
</parameter>
<parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi"><name>WhatIf</name>
<Description><para>Shows what would happen if the cmdlet runs. The cmdlet is not run.
</para>
</Description>
<type><name>SwitchParameter</name>
<uri /></type>
<defaultValue>False</defaultValue>
</parameter>
</syntaxItem>
</syntax>
<parameters><parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName, ByValue)" position="named" aliases="none"><name>ComputerName</name>
<Description><para>Specifies the computers to add to a domain or workgroup. The default is the local computer.
</para>
<para>Type the NetBIOS name, an Internet Protocol (IP) address, or a fully qualified domain name of each of the remote computers. To specify the local computer, type the computer name, a dot (.), or "localhost".
</para>
<para>This parameter does not rely on Windows PowerShell remoting. You can use the ComputerName parameter of Add-Computer even if your computer is not configured to run remote commands.
</para>
<para>This parameter was introduced in Windows PowerShell 3.0.
</para>
</Description>
<parameterValue required="true" variableLength="false">String[]</parameterValue>
<type><name>String[]</name>
<uri /></type>
<defaultValue>None</defaultValue>
</parameter>
<parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="cf"><name>Confirm</name>
<Description><para>Prompts you for confirmation before running the cmdlet.
</para>
</Description>
<parameterValue required="false" variableLength="false">SwitchParameter</parameterValue>
<type><name>SwitchParameter</name>
<uri /></type>
<defaultValue>False</defaultValue>
</parameter>
<parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="DomainCredential"><name>Credential</name>
<Description><para>Specifies a user account that has permission to join the computers to a new domain. The default is the current user.
</para>
<para>Type a user name, such as "User01" or "Domain01\User01", or enter a PSCredential object, such as one generated by the Get-Credential cmdlet. If you type a user name, you will be prompted for a password.
</para>
<para>To specify a user account that has permission to remove the computer from its current domain, use the UnjoinDomainCredential parameter. To specify a user account that has permission to connect to a remote computer, use the LocalCredential parameter.
</para>
</Description>
<parameterValue required="true" variableLength="false">PSCredential</parameterValue>
<type><name>PSCredential</name>
<uri /></type>
<defaultValue>None</defaultValue>
</parameter>
<parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="DN, Domain"><name>DomainName</name>
<Description><para>Specifies the domain to which the computers are added. This parameter is required when adding the computers to a domain.
</para>
</Description>
<parameterValue required="true" variableLength="false">String</parameterValue>
<type><name>String</name>
<uri /></type>
<defaultValue>None</defaultValue>
</parameter>
<parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><name>Force</name>
<Description><para>Forces the command to run without asking for user confirmation. Without this parameter, Add-Computer requires you to confirm the addition of each computer.
</para>
<para>This parameter was introduced in Windows PowerShell 3.0.
</para>
</Description>
<parameterValue required="false" variableLength="false">SwitchParameter</parameterValue>
<type><name>SwitchParameter</name>
<uri /></type>
<defaultValue>False</defaultValue>
</parameter>
<parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><name>LocalCredential</name>
<Description><para>Specifies a user account that has permission to connect to the computers that are specified by the ComputerName parameter. The default is the current user.
</para>
<para>Type a user name, such as "User01" or "Domain01\User01", or enter a PSCredential object, such as one generated by the Get-Credential cmdlet. If you type a user name, you will be prompted for a password.
</para>
<para>To specify a user account that has permission to add the computers to a new domain, use the Credential parameter. To specify a user account that has permission to remove the computers from their current domain, use the UnjoinDomainCredential parameter.
</para>
<para>This parameter was introduced in Windows PowerShell 3.0.
</para>
</Description>
<parameterValue required="true" variableLength="false">PSCredential</parameterValue>
<type><name>PSCredential</name>
<uri /></type>
<defaultValue>None</defaultValue>
</parameter>
<parameter required="false" variableLength="true" globbing="false" pipelineInput="True (ByPropertyName)" position="named" aliases="none"><name>NewName</name>
<Description><para>Specifies a new name for the computer in the new domain. This parameter is valid only when one computer is being added or moved.
</para>
<para>This parameter was introduced in Windows PowerShell 3.0.
</para>
</Description>
<parameterValue required="true" variableLength="false">String</parameterValue>
<type><name>String</name>
<uri /></type>
<defaultValue>None</defaultValue>
</parameter>
<parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="OU"><name>OUPath</name>
<Description><para>Specifies an organizational unit (OU) for the domain account. Enter the full distinguished name of the OU in quotation marks.  The default value is the default OU for machine objects in the domain.
</para>
</Description>
<parameterValue required="true" variableLength="false">String</parameterValue>
<type><name>String</name>
<uri /></type>
<defaultValue>None</defaultValue>
</parameter>
<parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><name>Options</name>
<Description><para>Specifies advanced options for the Add-Computer join operation. Enter one or more values in a comma-separated string.
</para>
<para>The acceptable values for this parameter are:
</para>
<para>- AccountCreate : Creates a domain account. The Add-Computer cmdlet automatically creates a domain account when it adds a computer to a domain. This option is included for completeness.
</para>
<para>- Win9XUpgrade : Indicates that the join operation is part of a Windows operating system upgrade.
</para>
<para>- UnsecuredJoin : Performs an unsecured join. To request an unsecured join, use the Unsecure parameter or this option.
</para>
<para>- PasswordPass : Sets the machine password to the value of the Credential (DomainCredential) parameter after performing an unsecured join. This option also indicates that the value of the Credential (DomainCredential) parameter is a machine password, not a user password. This option is valid only when the UnsecuredJoin option is specified.
</para>
<para> -- JoinWithNewName : Renames the computer name in the new domain to the name specified by the NewName parameter. When you use the NewName parameter, this option is set automatically. This option is designed to be used with the Rename-Computer cmdlet. If you use the Rename-Computer cmdlet to rename the computer, but do not restart the computer to make the change effective, you can use this parameter to join the computer to a domain with its new name.
</para>
<para>- JoinReadOnly : Uses an existing machine account to join the computer to a read-only domain controller. The machine account must be added to the allowed list for password replication policy and the account password must be replicated to the read-only domain controller prior to the join operation.
</para>
<para>- InstallInvoke : Sets the create (0x2) and delete (0x4) flags of the FJoinOptions parameter of the JoinDomainOrWorkgroup method. For more information about the JoinDomainOrWorkgroup method, see "JoinDomainOrWorkgroup Method of the Win32_ComputerSystem Class" on MSDNhttp://msdn.microsoft.com/library/aa392154(VS.85).aspx at http://msdn.microsoft.com/library/aa392154(VS.85).aspx.
</para>
<para>For more information about these options, see "NetJoinDomain" on MSDNhttp://msdn.microsoft.com/library/aa370433(VS.85).aspx at http://msdn.microsoft.com/library/aa370433(VS.85).aspx.
</para>
<para>This parameter was introduced in Windows PowerShell 3.0.
</para>
</Description>
<parameterValue required="true" variableLength="false">JoinOptions</parameterValue>
<type><name>JoinOptions</name>
<uri /></type>
<defaultValue>None</defaultValue>
</parameter>
<parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><name>PassThru</name>
<Description><para>Returns an object representing the item with which you are working. By default, this cmdlet does not generate any output.
</para>
</Description>
<parameterValue required="false" variableLength="false">SwitchParameter</parameterValue>
<type><name>SwitchParameter</name>
<uri /></type>
<defaultValue>False</defaultValue>
</parameter>
<parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><name>Restart</name>
<Description><para>Indicates that this cmdlet restarts the computers that were added to the domain or workgroup. A restart is often required to make the change effective.
</para>
<para>This parameter was introduced in Windows PowerShell 3.0.
</para>
</Description>
<parameterValue required="false" variableLength="false">SwitchParameter</parameterValue>
<type><name>SwitchParameter</name>
<uri /></type>
<defaultValue>False</defaultValue>
</parameter>
<parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="DC"><name>Server</name>
<Description><para>Specifies the name of a domain controller that adds the computer to the domain. Enter the name in DomainName\ComputerName format. By default, no domain controller is specified.
</para>
</Description>
<parameterValue required="true" variableLength="false">String</parameterValue>
<type><name>String</name>
<uri /></type>
<defaultValue>None</defaultValue>
</parameter>
<parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><name>UnjoinDomainCredential</name>
<Description><para>Specifies a user account that has permission to remove the computers from their current domains. The default is the current user.
</para>
<para>Type a user name, such as "User01" or "Domain01\User01", or enter a PSCredential object, such as one generated by the Get-Credential cmdlet. If you type a user name, you will be prompted for a password.
</para>
<para>Use this parameter when you are moving computers to a different domain. To specify a user account that has permission to join the new domain, use the Credential parameter. To specify a user account that has permission to connect to a remote computer, use the LocalCredential parameter.
</para>
<para>This parameter was introduced in Windows PowerShell 3.0.
</para>
</Description>
<parameterValue required="true" variableLength="false">PSCredential</parameterValue>
<type><name>PSCredential</name>
<uri /></type>
<defaultValue>None</defaultValue>
</parameter>
<parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="none"><name>Unsecure</name>
<Description><para>Indicates that this cmdlet performs an unsecured join to the specified domain.
</para>
</Description>
<parameterValue required="false" variableLength="false">SwitchParameter</parameterValue>
<type><name>SwitchParameter</name>
<uri /></type>
<defaultValue>False</defaultValue>
</parameter>
<parameter required="false" variableLength="true" globbing="false" pipelineInput="False" position="named" aliases="wi"><name>WhatIf</name>
<Description><para>Shows what would happen if the cmdlet runs. The cmdlet is not run.
</para>
</Description>
<parameterValue required="false" variableLength="false">SwitchParameter</parameterValue>
<type><name>SwitchParameter</name>
<uri /></type>
<defaultValue>False</defaultValue>
</parameter>
<parameter required="true" variableLength="true" globbing="false" pipelineInput="False" position="0" aliases="WGN"><name>WorkgroupName</name>
<Description><para>Specifies the name of a workgroup to which the computers are added. The default value is "WORKGROUP".
</para>
</Description>
<parameterValue required="true" variableLength="false">String</parameterValue>
<type><name>String</name>
<uri /></type>
<defaultValue>None</defaultValue>
</parameter>
</parameters>
<inputTypes><inputType><type><name>System.String</name>
</type>
<description><para>You can pipe computer names and new names to this cmdlet.
</para>
</description>
</inputType>
</inputTypes>
<returnValues><returnValue><type><name>Microsoft.PowerShell.Commands.ComputerChangeInfo</name>
</type>
<description><para>When you use the PassThru parameter, Add-Computer returns a ComputerChangeInfo object. Otherwise, this cmdlet does not generate any output.
</para>
</description>
</returnValue>
</returnValues>
<alertSet><alert><para>In Windows PowerShell 2.0, the Server parameter of Add-Computer fails even when the server is present. In Windows PowerShell 3.0, the implementation of the Server* parameter is changed so that it works reliably.
</para>
</alert>
</alertSet>
<examples><example><title>Example 1: Add a local computer to a domain then restart the computer</title>
<code>PS C:\&gt;Add-Computer -DomainName "Domain01" -Restart</code>
<remarks><para>This command adds the local computer to the Domain01 domain and then restarts the computer to make the change effective.
</para>
</remarks>
</example>
<example><title>Example 2: Add a local computer to a workgroup</title>
<code>PS C:\&gt;Add-Computer -WorkGroupName "WORKGROUP-A"</code>
<remarks><para>This command adds the local computer to the Workgroup-A workgroup.
</para>
</remarks>
</example>
<example><title>Example 3: Add a local computer to a domain</title>
<code>PS C:\&gt;Add-Computer -DomainName "Domain01" -Server "Domain01\DC01" -Passthru -Verbose</code>
<remarks><para>This command adds the local computer to the Domain01 domain by using the Domain01\DC01 domain controller.
</para>
<para>The command uses the PassThru and Verbose parameters to get detailed information about the results of the command.
</para>
</remarks>
</example>
<example><title>Example 4: Add a local computer to a domain using the OUPath parameter</title>
<code>PS C:\&gt;Add-Computer -DomainName "Domain02" -OUPath "OU=testOU,DC=domain,DC=Domain,DC=com"</code>
<remarks><para>This command adds the local computer to the Domain02 domain. It uses the OUPath parameter to specify the organizational unit for the new accounts.
</para>
</remarks>
</example>
<example><title>Example 5: Add a local computer to a domain using credentials</title>
<code>PS C:\&gt;Add-Computer -ComputerName "Server01" -LocalCredential "Server01\Admin01" -DomainName "Domain02" -Credential Domain02\Admin02 -Restart -Force</code>
<remarks><para>This command adds the Server01 computer to the Domain02 domain. It uses the LocalCredential parameter to specify a user account that has permission to connect to the Server01 computer. It uses the Credential parameter to specify a user account that has permission to join computers to the domain. It uses the Restart parameter to restart the computer after the join operation completes and the Force parameter to suppress user confirmation messages.
</para>
</remarks>
</example>
<example><title>Example 6: Move a group of computers to a new domain</title>
<code>PS C:\&gt;Add-Computer -ComputerName "Server01", "Server02", "localhost" -Domain "Domain02" -LocalCredential Domain01\User01 -UnjoinDomainCredential Domain01\Admin01 -Credential Domain02\Admin01 -Restart</code>
<remarks><para>This command moves the Server01 and Server02 computers, and the local computer, from Domain01 to Domain02.
</para>
<para>It uses the LocalCredential parameter to specify a user account that has permission to connect to the three affected computers. It uses the UnjoinDomainCredential parameter to specify a user account that has permission to unjoin the computers from the Domain01 domain and the Credential parameter to specify a user account that has permission to join the computers to the Domain02 domain. It uses the Restart parameter to restart all three computers after the move is complete.
</para>
</remarks>
</example>
<example><title>Example 7: Move a computer to a new domain and change the name of the computer</title>
<code>PS C:\&gt;Add-Computer -ComputerName "Server01" -Domain "Domain02" -NewName "Server044" -Credential Domain02\Admin01 -Restart</code>
<remarks><para>This command moves the Server01 computer to the Domain02 and changes the machine name to Server044.
</para>
<para>The command uses the credential of the current user to connect to the Server01 computer and unjoin it from its current domain. It uses the Credential parameter to specify a user account that has permission to join the computer to the Domain02 domain.
</para>
</remarks>
</example>
<example><title>Example 8: Add computers listed in a file to a new domain</title>
<code>PS C:\&gt;Add-Computer -ComputerName (Get-Content Servers.txt) -Domain "Domain02" -Credential Domain02\Admin02 -Options Win9xUpgrade -Restart</code>
<remarks><para>This command adds the computers that are listed in the Servers.txt file to the Domain02 domain. It uses the Options parameter to specify the Win9xUpgrade option. The Restart parameter restarts all of the newly added computers after the join operation completes.
</para>
</remarks>
</example>
</examples>
<relatedLinks><navigationLink><linkText>Online Version:</linkText>
<uri>http://go.microsoft.com/fwlink/?LinkId=821564</uri>
</navigationLink>
<navigationLink><linkText>Checkpoint-Computer</linkText>
<uri></uri>
</navigationLink>
<navigationLink><linkText>Remove-Computer</linkText>
<uri></uri>
</navigationLink>
<navigationLink><linkText>Restart-Computer</linkText>
<uri></uri>
</navigationLink>
<navigationLink><linkText>Rename-Computer</linkText>
<uri></uri>
</navigationLink>
<navigationLink><linkText>Restore-Computer</linkText>
<uri></uri>
</navigationLink>
<navigationLink><linkText>Stop-Computer</linkText>
<uri></uri>
</navigationLink>
<navigationLink><linkText>Test-Connection</linkText>
<uri></uri>
</navigationLink>
</relatedLinks>
</helpItems>
